from google.adk.agents import Agent # Using the import path from your example
# For ADK models, if needed explicitly. The Agent constructor might handle strings differently.
# from adk.models import GeminiModel

# --- Configuration for the Agent's Model ---
# The user's example used a simple model string: model="gemini-2.0-flash"
# The `google.adk.agents.Agent` constructor, when given a string for the model,
# likely uses application default credentials and infers project/location if possible,
# or uses settings from `gcloud config set project/location`.
# For explicit control over project/location as we had before,
# we would normally pass an instantiated `adk.models.GeminiModel` object.
# Let's try with the model string first, similar to your example, and assume
# ADC and gcloud config provide necessary context.
# If this doesn't work, we might need to pass a fully configured Model instance.

AGENT_MODEL_NAME = "gemini-2.0-flash" # Using a common available model


root_agent = Agent(
        name="micro_interactio_generator_agent", # Optional: name for the agent instance
        model=AGENT_MODEL_NAME,
        description=( # High-level description of what this agent does
            "An agent that generates HTML, CSS, and JavaScript code for UI micro-interactions based on user descriptions."
        ),
        instruction=( # Specific instructions for the LLM on how to behave
            "You are an expert Interaction Designer Agent. Your sole purpose is to help users "
            "generate code for UI micro-interactions. When a user describes a micro-interaction "
            "(e.g., 'a button that wiggles on error', 'a card that pulses'), "
            "you MUST use the 'generate_code_with_gemini' tool to produce the code. "
            "Carefully extract the 'description' of the interaction and a 'target_element_hint' "
            "(e.g., 'button', 'input', 'card', 'div') from the user's request to pass to the tool. "
            "If the user doesn't explicitly provide a hint for the target element, infer a sensible default like 'element' or 'div'. "
            "Your final response to the user should be ONLY the code snippet generated by the tool. "
            "Do not add any conversational fluff before or after the code. If the tool returns an error, relay that error."
        )
        tools=[micro_interaction_tool_instance]
        # enable_reflection=True # Optional: for more advanced agent behavior
    )


